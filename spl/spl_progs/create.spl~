alias physicalSP S0;
physicalSP = ([PTBR + 2 * (SP / 512)] * 512) + (SP % 512);

alias sysCallNo S1;
sysCallNo = [physicalSP-1];
alias filename S2;
filename =  [physicalSP-3];

if(sysCallNo == 1) then
	print filename;
	alias j S3;
	j=0;
	alias check S4;
	check=0;
	while(j<64) do
		if([FAT+8*j]==filename) then
			check=1;
			break;
		endif;
		j=j+1;
	endwhile;
	if(check==1) then
		print "already exists";
		[physicalSP-2]=0;
		ireturn;
	else
		print "created";
		j=0;
		while(j<64) do
			if([FAT+8*j]==-1) then
				break;
			endif;
		j=j+1;
		endwhile;
				
		if(j==64) then
			print "FAT is full";
			[physicalSP-2]=-1;
			ireturn;
		endif;	
	
		alias i S4;
		i=20;
		while(i<448) do
			if([DISK_LIST+i]==0) then
				break;
			endif;
			i=i+1;
		endwhile;
		if(i==448) then
			print "~ space for bb";
			[physicalSP-2]=-1;
			ireturn;
		endif;		
		[FAT+8*j+0]=filename;
		[FAT+8*j+1]=0;
		[FAT+8*j+2]=i;
		[DISK_LIST+i]=1; //basic block update 
		print "bb number";
		print i;		
		i=20;
		while(i<448) do
			if([DISK_LIST+i]==0) then
				break;
			endif;
			i=i+1;
		endwhile;
		if(i==448) then
			print "~ space for db";
			[physicalSP-2]=-1;
			ireturn;
		endif;
		print "db number";
		print i;	
		// load the data block of disk onto startupcode of memory as os startup has already been executed
		load(1,i);
		j=0;
		while(j<512) do
			[SCRATCHPAD+j]=-1;
			j=j+1;
		endwhile;
		print "db updated";
		store(1,i);
		[DISK_LIST+i]=1;
		store(5,19);
		store(6,20);
	endif;
endif;
print "success";
[physicalSP-2]=0;
ireturn;			
		
